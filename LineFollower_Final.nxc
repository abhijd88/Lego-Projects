#define clap 70
#define clapInterval 3000

int dir=1;
int white=0;
int black=0;
int mid=0;
task moveYo(){
float computedPower,kp,error;
string eStr,eOut,cpStr,cpOut;
    kp=0.6;
     while(true){
       error=SENSOR_3-mid;
       computedPower=error*kp;
       if (computedPower>50){
          computedPower=50;
       }

       if (computedPower<-50){
          computedPower=-50;
       }
       ClearScreen();
       eStr = NumToStr(error);
       eOut = StrCat("Error: ",eStr);
       cpStr = NumToStr(computedPower);
       cpOut = StrCat("Cp: ",cpStr);
       NumOut(15,LCD_LINE5,SENSOR_3);
       TextOut(1,LCD_LINE1,eOut);
       TextOut(1,LCD_LINE3,cpOut);

       if(dir==1){
         OnFwd(OUT_B, 50+computedPower);
         OnFwd(OUT_C, 50-computedPower);
       }
       else if(dir==2){
         OnRev(OUT_C, 50+computedPower);
         OnRev(OUT_B, 50-computedPower);
       }
     }
}

task check_clap(){
  while (true){
    if (SENSOR_2 > clap){
       int t0 = CurrentTick();
       while( (CurrentTick()-t0)  <clapInterval){
          if (SENSOR_2>clap){
             if(dir==1)
             {dir=2;}
             else if (dir==2)
             {dir=1;}
          }
       }
    }
  }
}

task main(){
  SetSensorType(IN_3,  SENSOR_TYPE_LIGHT_ACTIVE);
  SetSensorMode(IN_3, SENSOR_MODE_RAW);
  SetSensorType(IN_4, SENSOR_TYPE_TOUCH);
  SetSensorSound(IN_2);

  // Calibration
  TextOut(10, LCD_LINE2,"Calibrate WHITE");
  until (SENSOR_4 == 1);
  white=SENSOR_3;
  NumOut(15, LCD_LINE3,SENSOR_3);
  Wait(3000);
  ClearScreen();
  TextOut(10, LCD_LINE1,"Calibrate BLACK");
  until (SENSOR_4 == 1);
  black=SENSOR_3;
  NumOut(15, LCD_LINE3,SENSOR_3);
  TextOut(5, LCD_LINE4,"Calibration Done");
  Wait(3000);
  mid=(black+white)/2;
  ClearScreen(); // Calibration Done

  Precedes(moveYo, check_clap);
}
